<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2013 eXo Platform SAS.

    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 3 of
    the License, or (at your option) any later version.

    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

  <!-- Import the Crowd Client Spring configuration provided with the client lib -->
  <import resource="classpath:/applicationContext-CrowdClient.xml" />

  <bean id="clientProperties" class="com.atlassian.crowd.service.soap.client.SoapClientPropertiesImpl" factory-method="newInstanceFromPropertiesWithoutOverrides">
    <constructor-arg type="java.util.Properties">
      <!-- We create an dedicated properties object to store the crowd configuration from our environment -->
      <util:properties>
        <prop key="crowd.server.url">${acceptance.crowd.server.url}</prop>
        <prop key="application.name">${acceptance.crowd.application.name}</prop>
        <prop key="application.password">${acceptance.crowd.application.password}</prop>
        <prop key="application.login.url">${acceptance.crowd.application.login.url}</prop>
        <prop key="cookie.domain">${acceptance.crowd.cookie.domain}</prop>
        <prop key="session.validationinterval">${acceptance.crowd.session.validationinterval}</prop>
        <prop key="session.isauthenticated">${acceptance.crowd.session.isauthenticated}</prop>
        <prop key="session.tokenkey">${acceptance.crowd.session.tokenkey}</prop>
        <prop key="session.lastvalidation">${acceptance.crowd.session.lastvalidation}</prop>
      </util:properties>
    </constructor-arg>
  </bean>

  <!-- no security for assets (js/css/img)-->
  <security:http pattern='/assets/**/*.css' security='none' />
  <security:http pattern='/assets/**/*.js' security='none' />
  <security:http pattern='/assets/**/*.png' security='none' />
  <security:http pattern='/assets/**/*.gif' security='none' />
  <security:http pattern='/assets/**/*.jpg' security='none' />
  <security:http pattern='/assets/**/*.ico' security='none' />
  <security:http pattern='/favicon.ico' security='none' />
  <!-- no security on the signin page or we can't even login -->
  <security:http pattern='/signin' security='none' />

  <security:http auto-config="true" authentication-manager-ref="authenticationManager">
    <security:intercept-url pattern="/" access="ROLE_acceptance-users" />
    <security:intercept-url pattern="/admin" access="ROLE_acceptance-administrators" />
    <security:intercept-url pattern="/admin/*" access="ROLE_acceptance-administrators" />
    <security:intercept-url pattern="/search" access="ROLE_acceptance-users" />
    <security:intercept-url pattern="/profile" access="ROLE_acceptance-users" />
    <!-- Leave this rule at the end to catch ALL urls not covered by explicit security rules -->
    <!-- and don't change the access ROLE which permit us to quickly detect new url because even admin can't access it -->
    <security:intercept-url pattern="/WEB-INF" access="ROLE_NON_EXISTING" />

    <security:form-login login-page="/signin" login-processing-url="/login" default-target-url="/" password-parameter="password" username-parameter="username" />

    <security:logout invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/signin" logout-url="/logout" />

    <security:access-denied-handler error-page="/403" />
  </security:http>

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider ref='crowdAuthenticationProvider' />
  </security:authentication-manager>

  <!-- CROWD configuration -->
  <bean id="crowdAuthenticationProvider" class="com.atlassian.crowd.integration.springsecurity.RemoteCrowdAuthenticationProvider">
    <constructor-arg ref="crowdAuthenticationManager" />
    <constructor-arg ref="httpAuthenticator" />
    <constructor-arg ref="crowdUserDetailsService" />
  </bean>
  <bean id="crowdUserDetailsService" class="com.atlassian.crowd.integration.springsecurity.user.CrowdUserDetailsServiceImpl">
    <property name="authenticationManager" ref="crowdAuthenticationManager" />
    <property name="groupMembershipManager" ref="crowdGroupMembershipManager" />
    <property name="userManager" ref="crowdUserManager" />
    <property name="authorityPrefix" value="ROLE_" />
  </bean>

</beans>
