<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2013 eXo Platform SAS.

    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 3 of
    the License, or (at your option) any later version.

    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>maven-parent-pom</artifactId>
    <groupId>org.exoplatform</groupId>
    <version>12-SNAPSHOT</version>
    <relativePath/>
  </parent>
  <groupId>org.exoplatform.swf</groupId>
  <artifactId>acceptance</artifactId>
  <version>2.0.x-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>eXo Acceptance</name>
  <description>eXo Acceptance</description>
  <scm>
    <connection>scm:git:git://github.com/exoplatform/acceptance.git</connection>
    <developerConnection>scm:git:git@github.com:exoplatform/acceptance.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/exoplatform/acceptance/</url>
  </scm>
  <properties>
    <!-- **************************************** -->
    <!-- Framework version                                  -->
    <!-- **************************************** -->
    <!-- don't use 2.6.4 version due to https://jira.atlassian.com/browse/CWD-3493 issue -->
    <crowd.version>2.6.5</crowd.version>
    <embedmongo-spring.version>1.1</embedmongo-spring.version>
    <hibernate.validator.version>4.2.0.Final</hibernate.validator.version>
    <jackson2.version>2.2.2</jackson2.version>
    <jansi.version>1.9</jansi.version>
    <javax.annotation.version>1.0</javax.annotation.version>
    <javax.inject.version>1</javax.inject.version>
    <javax.mail.version>1.4.2</javax.mail.version>
    <javax.servlet.version>3.0.1</javax.servlet.version>
    <javax.validation.version>1.0.0.GA</javax.validation.version>
    <javax.ws.rs.version>1.0</javax.ws.rs.version>
    <junit.version>4.11</junit.version>
    <juzu.version>0.7.0-beta20-SNAPSHOT</juzu.version>
    <logback.version>1.0.13</logback.version>
    <lombok.version>0.12.0</lombok.version>
    <mongodb.driver.version>2.11.2</mongodb.driver.version>
    <slf4j.version>1.7.5</slf4j.version>
    <spring.data.mongo.version>1.3.1.RELEASE</spring.data.mongo.version>
    <spring.data.version>1.6.1.RELEASE</spring.data.version>
    <spring.security.version>3.1.4.RELEASE</spring.security.version>
    <spring.version>3.2.4.RELEASE</spring.version>
    <tomcat.version>7.0.42</tomcat.version>
    <!-- ************** -->
    <!-- Build settings -->
    <!-- ************** -->
    <!-- maven-compiler-plugin -->
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.compiler.source>1.7</maven.compiler.source>
    <!-- To configure animal-sniffer to check API compat -->
    <animal-sniffer.signature.artifactId>java17</animal-sniffer.signature.artifactId>
    <animal-sniffer.signature.version>1.0</animal-sniffer.signature.version>
    <!-- Development settings -->
    <acceptance.dev.crowd.application.name>acceptanceng.exoplatform.org</acceptance.dev.crowd.application.name>
    <acceptance.dev.crowd.application.password>TO_DEFINE_IN_YOUR_SETTINGS</acceptance.dev.crowd.application.password>
    <acceptance.dev.crowd.application.login.url>http://localhost:8080/signin</acceptance.dev.crowd.application.login.url>
    <acceptance.dev.crowd.cookie.domain>localhost</acceptance.dev.crowd.cookie.domain>
    <acceptance.dev.crowd.server.url>https://identity.exoplatform.org/services/</acceptance.dev.crowd.server.url>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!-- **************************************** -->
      <!-- Logback -->
      <!-- **************************************** -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Crowd -->
      <!-- **************************************** -->
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-client-soap</artifactId>
        <version>${crowd.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-springsecurity</artifactId>
        <version>${crowd.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- **************************************** -->
      <!-- Jackson 2 (needed for Spring MVC JSON mapping) -->
      <!-- **************************************** -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson2.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- MongoDB -->
      <!-- **************************************** -->
      <dependency>
        <groupId>cz.jirutka.spring</groupId>
        <artifactId>embedmongo-spring</artifactId>
        <version>${embedmongo-spring.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- javax.* -->
      <!-- **************************************** -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>jsr250-api</artifactId>
        <version>${javax.annotation.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>${javax.mail.version}</version>
      </dependency>
      <!-- INFO : Servlet 3.0+ replaces the old javax.servlet:servlet-api -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${javax.validation.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>${javax.ws.rs.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- JUnit -->
      <!-- **************************************** -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <!-- Additional Tomcat JAR to allow to fix JMX ports. Useful when the server is behind a firewall -->
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-catalina-jmx-remote</artifactId>
        <version>${tomcat.version}</version>
        <scope>provided</scope>
      </dependency>
      <!-- Build resource used to import license related files -->
      <dependency>
        <groupId>org.exoplatform.resources</groupId>
        <artifactId>exo-lgpl-license-resource-bundle</artifactId>
        <!-- It's version is set in parent pom -->
        <version>${version.exo-lgpl-license-resource-bundle}</version>
        <scope>provided</scope>
      </dependency>
      <!-- **************************************** -->
      <!-- Required by logback for colorized console on windows -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.fusesource.jansi</groupId>
        <artifactId>jansi</artifactId>
        <version>${jansi.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Hibernate Validator Framework -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate.validator.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Juzu Web Framework -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-bom-arquillian</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-bom-arquillian-tomcat7</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-bom-core</artifactId>
        <version>${juzu.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>weld-core</artifactId>
            <groupId>org.jboss.weld</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-core</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-less</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-portlet</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-servlet</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.juzu</groupId>
        <artifactId>juzu-plugins-upload</artifactId>
        <version>${juzu.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongodb.driver.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Lombok -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- SLF4J -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Spring Framework -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-asm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Spring Data Framework -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>${spring.data.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-mongodb</artifactId>
        <version>${spring.data.mongo.version}</version>
      </dependency>
      <!-- **************************************** -->
      <!-- Spring Security -->
      <!-- **************************************** -->
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-taglibs</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- **************************************** -->
    <!-- Use logback for tests outputs -->
    <!-- **************************************** -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Crowd -->
    <!-- **************************************** -->
    <dependency>
      <groupId>com.atlassian.crowd</groupId>
      <artifactId>crowd-integration-client-soap</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.atlassian.crowd</groupId>
      <artifactId>crowd-integration-springsecurity</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Embedded MongoDB -->
    <!-- **************************************** -->
    <dependency>
      <groupId>cz.jirutka.spring</groupId>
      <artifactId>embedmongo-spring</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- javax.* -->
    <!-- **************************************** -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- JUnit -->
    <!-- **************************************** -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Apache Tomcat -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat</artifactId>
      <version>${tomcat.version}</version>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>
    <!-- Additional Tomcat JAR to allow to fix JMX ports. Useful when the server is behind a firewall -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-catalina-jmx-remote</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Build resource used to import license related files -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.exoplatform.resources</groupId>
      <artifactId>exo-lgpl-license-resource-bundle</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Required by logback for colorized console on windows -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Hibernate Validator Framework -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- ########################################### -->
    <!-- Juzu Frameworks -->
    <!-- ########################################### -->
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-bom-core</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-simple</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-plugins-servlet</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-bom-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.juzu</groupId>
      <artifactId>juzu-bom-arquillian-tomcat7</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Lombok -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- SLF4J -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Spring Framework -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Spring Data Framework -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-commons</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- **************************************** -->
    <!-- Spring Security Framework -->
    <!-- **************************************** -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <!-- Filtered main resources -->
      <resource>
        <filtering>true</filtering>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <!-- Not filtered main resources -->
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <!-- Filtered test resources -->
      <testResource>
        <filtering>true</filtering>
        <directory>${project.basedir}/src/test/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </testResource>
      <!-- Not filtered test resources -->
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>reserve-network-port</id>
              <goals>
                <goal>reserve-network-port</goal>
              </goals>
              <phase>process-resources</phase>
              <configuration>
                <portNames>
                  <portName>tomcat.http.port</portName>
                </portNames>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!-- Configure Groovy Compile for Juzu -->
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <configuration>
            <sources>
              <fileset>
                <directory>${project.build.outputDirectory}</directory>
                <includes>
                  <include>**/*.groovy</include>
                </includes>
              </fileset>
            </sources>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemProperties>
              <!-- test configuration file -->
              <acceptance.configurationFile>${project.build.testOutputDirectory}/acceptance.properties</acceptance.configurationFile>
              <!-- debug logback setup -->
              <logback.statusListenerClass>ch.qos.logback.core.status.OnConsoleStatusListener</logback.statusListenerClass>
              <!-- Port used for Tomcat HTTP connector -->
              <tomcat.http.port>${tomcat.http.port}</tomcat.http.port>
              <!-- The project version -->
              <project.version>${project.version}</project.version>
            </systemProperties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-resources-for-tomcat-run</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/tomcat-run-conf</outputDirectory>
                <resources>
                  <resource>
                    <filtering>true</filtering>
                    <directory>${project.basedir}/src/test/resources</directory>
                    <includes>
                      <include>acceptance.properties</include>
                      <include>logback.xml</include>
                      <include>tomcat-context.xml</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>default-cli</id>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <path>/</path>
                <!-- Use a separation classloader to avoid conflicts with SLF4J -->
                <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                <!-- The delay in seconds between each classPathScanning change invocation -->
                <backgroundProcessorDelay>30</backgroundProcessorDelay>
                <!-- Force context scanning if you don't use a context file with reloadable = "true" -->
                <contextReloadable>true</contextReloadable>
                <!-- Specific context for development mode -->
                <contextFile>${project.build.directory}/tomcat-run-conf/tomcat-context.xml</contextFile>
                <!-- System properties to test -->
                <systemProperties>
                  <!-- test configuration file -->
                  <acceptance.configurationFile>${project.build.directory}/tomcat-run-conf/acceptance.properties</acceptance.configurationFile>
                  <!-- logback configuration file -->
                  <logback.configurationFile>${project.build.directory}/tomcat-run-conf/logback.xml</logback.configurationFile>
                  <!-- debug logback setup -->
                  <logback.statusListenerClass>ch.qos.logback.core.status.OnConsoleStatusListener</logback.statusListenerClass>
                </systemProperties>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>ch.qos.logback</groupId>
              <artifactId>logback-classic</artifactId>
              <version>${logback.version}</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <!-- Create the distribution directory with all content -->
          <execution>
            <id>tomcat-distribution-content</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/main/assemblies/extract-dependencies.xml</descriptor>
                <descriptor>src/main/assemblies/tomcat-packaging.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>exo-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <!-- Create the distribution zip and attach it to maven -->
              <execution>
                <id>tomcat-zip</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assemblies/tomcat-zip.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Build License related files bundled directly in the archive -->
          <!-- This is a long process and really useful only for released stuffs -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>process</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.exoplatform.resources:exo-lgpl-license-resource-bundle:${version.exo-lgpl-license-resource-bundle}</resourceBundle>
              </resourceBundles>
              <includeScope>provided</includeScope>
              <excludeGroupIds>org.exoplatform,com.exoplatform</excludeGroupIds>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
